# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

# An example controller showing a sample home page
GET     /                               controllers.HomeController.index()
# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                   controllers.Assets.versioned(path="/public", file: Asset)

#Player Ops
+nocsrf
POST    /api/player                          controllers.PlayerController.addPlayer()
GET     /api/player/byid/:id                 controllers.PlayerController.getPlayer(id: Long)
PUT     /api/player                          controllers.PlayerController.updatePlayer
DELETE  /api/player/:name                    controllers.PlayerController.deletePlayer(name: String)
GET     /api/player/byname/:name             controllers.PlayerController.getPlayerByName(name: String)
GET     /api/player/all                      controllers.PlayerController.all

#Team Ops
+nocsrf
POST    /api/team                          controllers.TeamController.addTeam2()
GET     /api/team/byid/:id                 controllers.TeamController.getTeam(id: Long)
PUT     /api/team                          controllers.TeamController.updateTeam
DELETE  /api/team/:name                    controllers.TeamController.deleteTeam(name: String)
GET     /api/team/byname/:name             controllers.TeamController.getTeamByName(name: String)
GET     /api/team/all                      controllers.TeamController.all

#Student Ops
+nocsrf
POST    /student/add                         controllers.StudentController.addStudent()
GET     /student/by-name/:name               controllers.StudentController.getStudentByName(name: String)
GET     /student/by-id/:id                   controllers.StudentController.getStudent(id: Long)
GET     /student/all                         controllers.StudentController.list_all()
PUT     /student/update                      controllers.StudentController.updateStudent()
DELETE  /student/delete/:name                controllers.StudentController.deleteStudent(name: String)

#Tournament Ops
+nocsrf
GET     /tournament/team/all                         controllers.CricketTeamController.all()
POST    /tournament/team/add                         controllers.CricketTeamController.addTeam()
DELETE  /tournament/team/delete/:name                controllers.CricketTeamController.deleteTeam(name: String)

GET     /tournament/all                              controllers.TournamentController.all()
POST    /tournament/add                              controllers.TournamentController.createTournament()
DELETE  /tournament/delete/:name                     controllers.TournamentController.deleteTournament(name: String)

GET     /tournament/team/player/all                  controllers.CricketPlayerController.all()
POST    /tournament/team/player/add                  controllers.CricketPlayerController.addPlayer()
DELETE  /tournament/team/player/delete/:name         controllers.CricketPlayerController.deletePlayer(name: String)

GET     /tournament/match/all                        controllers.MatchController.all()
POST    /tournament/match/add                        controllers.MatchController.addMatch()
DELETE  /tournament/match/delete/:id                 controllers.MatchController.deleteMatch(id: Long)


GET     /tournament/matches/:id                      controllers.TournamentController.matchesByTournamentId(id: Long)
GET     /tournament/MaxScore/:id                     controllers.CricketTeamController.getTeamWithMaxScore(id: Long)
GET     /tournament/MaxScorer/:id                    controllers.CricketPlayerController.getMaxScorerInTournament(id: Long)
GET     /tournament/winner/teams/:id                 controllers.TournamentController.getAllWinnersById(id: Long)
GET     /tournament/winner/team/MaxScorer/:id        controllers.TournamentController.getWinnerWithMaxScorer(id:Long)



